import React, { useState } from "react";

const App = () => {
  const [jsonInput, setJsonInput] = useState("");
  const [responseData, setResponseData] = useState(null);
  const [selectedFilters, setSelectedFilters] = useState([]);

  const handleSubmit = async () => {
    try {
      const parsedData = JSON.parse(jsonInput);
      const response = await fetch("https://your-backend-url.com/bfhl", {
        method: "POST",
        headers: { "Content-Type": "application/json" },
        body: JSON.stringify(parsedData),
      });

      const data = await response.json();
      setResponseData(data);
    } catch (error) {
      alert("Invalid JSON input!");
    }
  };

  return (
    <div className="app">
      <h1>Data Processor</h1>
      <textarea
        rows="4"
        cols="50"
        placeholder='Enter JSON: {"data": ["A","1","B","2"]}'
        value={jsonInput}
        onChange={(e) => setJsonInput(e.target.value)}
      />
      <button onClick={handleSubmit}>Submit</button>

      {responseData && (
        <>
          <select multiple onChange={(e) => setSelectedFilters([...e.target.selectedOptions].map(opt => opt.value))}>
            <option value="numbers">Numbers</option>
            <option value="alphabets">Alphabets</option>
            <option value="highest_alphabet">Highest Alphabet</option>
          </select>
          <div>
            {selectedFilters.includes("numbers") && <p>Numbers: {responseData.numbers.join(", ")}</p>}
            {selectedFilters.includes("alphabets") && <p>Alphabets: {responseData.alphabets.join(", ")}</p>}
            {selectedFilters.includes("highest_alphabet") && <p>Highest Alphabet: {responseData.highest_alphabet}</p>}
          </div>
        </>
      )}
    </div>
  );
};

export default App;
